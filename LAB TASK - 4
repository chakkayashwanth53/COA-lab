1)	Write an assembly language program to perform division of 8-bit data.
org 100h
start:
    mov ax, cs
    mov ds, ax
    ; Initialize dividend and divisor
    mov al, [dividend]  
    mov bl, [divisor]   
    xor ah, ah          
    div bl              
    mov [quotient], al  
    mov [remainder], ah 
    ; Print message for quotient
    mov dx, offset msg_quotient
    mov ah, 09h         
    int 21h             
    ; Print quotient
    mov al, [quotient]
    add al, 30h         
    mov dl, al
    mov ah, 02h         
    int 21h             

    ; Print new line
    mov dl, 0Dh
    int 21h
    mov dl, 0Ah
    int 21h

    ; Print message for remainder
    mov dx, offset msg_remainder
    mov ah, 09h         
    int 21h             

    ; Print remainder
    mov al, [remainder]
    add al, 30h         
    mov dl, al
    mov ah, 02h         
    int 21h             

    ; Exit program
    mov ah, 4Ch
    int 21h

; Data Section
dividend  db 27     
divisor   db 05        
quotient  db 0          
remainder db 0

; Messages
msg_quotient db "Quotient: $"
msg_remainder db "Remainder: $"
 
2)	Write a program in assembly language to perform division of 16-bit data.
org 100h
mov ax,2000h 
mov bx,1000h 
div bx  
 mov bx,ax
 mov cx,dx 
 mov ah,ch
 and ah,0f0h
 shr ah,4
 add ah,30h
 cmp ah,39h
 jle print_high_nibble32
 add ah,7
 print_high_nibble32:
    mov dl,ah
    mov ah,02h
    int 21h
 mov ah,ch
 and ah,0fh
 add ah,30h
 cmp ah,39h
 jle print_low_nibble32
 add ah,7         
 print_low_nibble32:
 mov dl,ah
 mov ah,02h
 int 21h
 
 mov ah,cl
 and ah,0f0h
 shr ah,4
 add ah,30h
 cmp ah,39h
 jle print_low_nibble24 
 add ah,7
 print_low_nibble24:
 mov dl,ah
 mov ah,02h
 int 21h
        
 mov ah,cl
 and ah,0fh
 add ah,30h
 cmp ah,39h
 jle print_high_nibble24:
 add ah,7
 print_high_nibble24:
 mov dl,ah
 mov ah,02h
 int 21h
        
        
 mov ah, bh 
 shr ah, 4 
 add ah, 30h
 cmp ah, 39h 
 jle print_high_nibble
 add ah, 7 
print_high_nibble:
 mov dl, ah
 mov ah, 02h 
 int 21h
 
 mov ah, bh
 and ah, 0fh
 add ah, 30h 
 cmp ah, 39h 
 jle print_low_nibble
 add ah, 7 
print_low_nibble:
 mov dl, ah 
 mov ah, 02h 
 int 21h
 
 mov ah, bl 
 shr ah, 4 
 add ah, 30h 
 cmp ah, 39h 
 jle print_high_nibble2
 add ah, 7 
print_high_nibble2:
 mov dl, ah 
 mov ah, 02h 
 int 21h
 
 mov ah, bl 
 and ah, 0fh 
 add ah, 30h 
 cmp ah, 39h 
 jle print_low_nibble2
 add ah, 7 
print_low_nibble2:
 mov dl, ah 
 mov ah, 02h 
 int 21h
 mov ah,4ch
 int 21h
